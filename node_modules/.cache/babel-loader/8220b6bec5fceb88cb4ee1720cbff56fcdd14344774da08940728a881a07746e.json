{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Aishawrya_PWE17\\\\EduConnect-Hub\\\\src\\\\components\\\\Events\\\\Events.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport './EventPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventPage = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [registrationLink, setRegistrationLink] = useState('');\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const eventsRef = firebase.firestore().collection('events');\n      const snapshot = await eventsRef.get();\n      const eventsList = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setEvents(eventsList);\n    };\n    fetchEvents();\n  }, []);\n  const handleCreateEvent = async () => {\n    const event = {\n      title,\n      description,\n      date,\n      registrationLink,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    };\n    const eventRef = await firebase.firestore().collection('events').add(event);\n\n    // Send notification to students\n    const message = `New event created: ${title}`;\n    await sendNotificationToStudents(message);\n    setTitle('');\n    setDescription('');\n    setDate('');\n    setRegistrationLink('');\n    alert('Event created successfully!');\n  };\n  const sendNotificationToStudents = async message => {\n    const usersRef = firebase.firestore().collection('users');\n    const snapshot = await usersRef.where('role', '==', 'student').get();\n    const notifications = snapshot.docs.map(doc => doc.ref.update({\n      notifications: firebase.firestore.FieldValue.arrayUnion(message)\n    }));\n    await Promise.all(notifications);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Schedule an Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Event Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Event Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Registration Link\",\n        value: registrationLink,\n        onChange: e => setRegistrationLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateEvent,\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scheduled Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 16\n          }, this), \" \", event.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: event.registrationLink,\n          children: \"Register Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(EventPage, \"nitnfXHJXxqZO6wPdg4sCpOgKiI=\");\n_c = EventPage;\nexport default EventPage;\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["React","useState","useEffect","firebase","jsxDEV","_jsxDEV","EventPage","_s","events","setEvents","title","setTitle","description","setDescription","date","setDate","registrationLink","setRegistrationLink","fetchEvents","eventsRef","firestore","collection","snapshot","get","eventsList","docs","map","doc","id","data","handleCreateEvent","event","createdAt","FieldValue","serverTimestamp","eventRef","add","message","sendNotificationToStudents","alert","usersRef","where","notifications","ref","update","arrayUnion","Promise","all","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Aishawrya_PWE17/EduConnect-Hub/src/components/Events/Events.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport './EventPage.css';\r\n\r\nconst EventPage = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [registrationLink, setRegistrationLink] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      const eventsRef = firebase.firestore().collection('events');\r\n      const snapshot = await eventsRef.get();\r\n      const eventsList = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setEvents(eventsList);\r\n    };\r\n    \r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const handleCreateEvent = async () => {\r\n    const event = {\r\n      title,\r\n      description,\r\n      date,\r\n      registrationLink,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n    };\r\n\r\n    const eventRef = await firebase.firestore().collection('events').add(event);\r\n\r\n    // Send notification to students\r\n    const message = `New event created: ${title}`;\r\n    await sendNotificationToStudents(message);\r\n\r\n    setTitle('');\r\n    setDescription('');\r\n    setDate('');\r\n    setRegistrationLink('');\r\n    alert('Event created successfully!');\r\n  };\r\n\r\n  const sendNotificationToStudents = async (message) => {\r\n    const usersRef = firebase.firestore().collection('users');\r\n    const snapshot = await usersRef.where('role', '==', 'student').get();\r\n    const notifications = snapshot.docs.map(doc => doc.ref.update({\r\n      notifications: firebase.firestore.FieldValue.arrayUnion(message)\r\n    }));\r\n    await Promise.all(notifications);\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-page\">\r\n      <h1>Schedule an Event</h1>\r\n      <div className=\"event-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Event Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Event Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Registration Link\"\r\n          value={registrationLink}\r\n          onChange={(e) => setRegistrationLink(e.target.value)}\r\n        />\r\n        <button onClick={handleCreateEvent}>Create Event</button>\r\n      </div>\r\n      <div className=\"events-list\">\r\n        <h2>Scheduled Events</h2>\r\n        {events.map(event => (\r\n          <div key={event.id} className=\"event-item\">\r\n            <h3>{event.title}</h3>\r\n            <p>{event.description}</p>\r\n            <p><strong>Date:</strong> {event.date}</p>\r\n            <a href={event.registrationLink}>Register Here</a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}